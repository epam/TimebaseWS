{"version":3,"file":"deltix-ngx-vizceral.js","sources":["../../../projects/ngx-vizceral/src/lib/ngx-vizceral.service.ts","../../../projects/ngx-vizceral/src/lib/ngx-vizceral.directive.ts","../../../projects/ngx-vizceral/src/lib/ngx-vizceral.component.ts","../../../projects/ngx-vizceral/src/lib/ngx-vizceral.component.html","../../../projects/ngx-vizceral/src/lib/ngx-vizceral.module.ts","../../../projects/ngx-vizceral/src/public-api.ts","../../../projects/ngx-vizceral/src/deltix-ngx-vizceral.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxVizceralService {\n  \n  constructor() { }\n}\n","import VizceralGraph      from '@deltix/vizceral';\n// const isEqual = require('lodash.isequal');\nimport { ResizeObserver } from '@juggle/resize-observer';\n\nimport {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  DoCheck,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  NgZone,\n  ElementRef,\n  KeyValueDiffer,\n  SimpleChanges,\n}                       from '@angular/core';\nimport { VizceralSize } from './ngx-vizceral.models';\n\n@Directive({\n  selector: '[vizceral]',\n  exportAs: 'ngxVizceral',\n})\nexport class VizceralDirective implements OnInit, AfterViewInit, OnDestroy, DoCheck, OnChanges {\n  @Output() viewChanged = new EventEmitter<any>();\n  @Output() viewUpdated = new EventEmitter<any>();\n  @Output() objectHighlighted = new EventEmitter<any>();\n  @Output() nodeContextSizeChanged = new EventEmitter<any>();\n  @Output() matchesFound = new EventEmitter<any>();\n  @Output() nodeUpdated = new EventEmitter<any>();\n  @Output() objectHovered = new EventEmitter<any>();\n  \n  @Input() definitions: any = null;\n  @Input() traffic: any = null;\n  // ANDY// private objectsJSON: any = null;\n  @Input() view: any = null;\n  @Input() showLabels = true;\n  // private initialTraffic: any = null;\n  @Input() filters: any = null;\n  @Input() objectToHighlight: any = null;\n  @Input() match: any = null;\n  @Input() modes: any = null;\n  @Input() allowDraggingOfNodes = false;\n  @Input() styles: any = null;\n  @Input() targetFramerate: any = null;\n  @Input() initialSize: {\n    width: number,\n    height: number,\n  };\n  @Input() useCurrentInitialSize: boolean;\n  @Input('vizceral') config: any;\n  \n  private ro: any = null;\n  private instance: VizceralGraph = null;\n  private initialWidth: number = null;\n  private initialHeight: number = null;\n  private configDiff: KeyValueDiffer<string, any>;\n  /* @Input()\n   set traffic(data: any) {\n   this.setTraffic(data);\n   }*/\n  private defaultProps = {\n    connectionHighlighted: () => {},\n    definitions: {},\n    filters: [],\n    match: '',\n    nodeHighlighted: () => {},\n    nodeUpdated: () => {},\n    nodeContextSizeChanged: () => {},\n    matchesFound: () => {},\n    objectHighlighted: () => {},\n    objectHovered: () => {},\n    objectToHighlight: null,\n    showLabels: true,\n    allowDraggingOfNodes: false,\n    styles: {},\n    traffic: {},\n    viewChanged: () => {},\n    viewUpdated: () => {},\n    view: [],\n    targetFramerate: null,\n  };\n  \n  constructor(\n    private zone: NgZone,\n    private elementRef: ElementRef,\n    // private differs: KeyValueDiffers,\n  ) {\n  }\n  \n  @Input()\n  set size(size: VizceralSize) {\n    this.setSize(size.width, size.height);\n  }\n  \n  ngOnInit(): void {\n    this.zone.runOutsideAngular(() => {\n  \n      const elRef = this.elementRef.nativeElement;\n      let size = {};\n      if (this.initialSize) {\n        size = this.initialSize;\n      } else if (this.useCurrentInitialSize) {\n        size = {\n          width: elRef.offsetWidth,\n          height: elRef.offsetHeight,\n        };\n      }\n      this.instance = new VizceralGraph(elRef, this.targetFramerate, size);\n  \n      this.instance.on('viewChanged', (event) => {\n        this.zone.run(() => {\n          this.viewChanged.emit(event);\n        });\n      });\n      this.instance.on('objectHighlighted', (event) => {\n        this.zone.run(() => {\n          this.objectHighlighted.emit(event);\n        });\n      });\n      this.instance.on('objectHovered', (event) => {\n        this.zone.run(() => {\n          this.objectHovered.emit(event);\n        });\n      });\n      this.instance.on('nodeUpdated', (event) => {\n        this.zone.run(() => {\n          this.nodeUpdated.emit(event);\n        });\n      });\n      this.instance.on('nodeContextSizeChanged', (event) => {\n        this.zone.run(() => {\n          this.nodeContextSizeChanged.emit(event);\n        });\n      });\n      this.instance.on('matchesFound', (event) => {\n        this.zone.run(() => {\n          this.matchesFound.emit(event);\n        });\n      });\n      this.instance.on('viewUpdated', (event) => {\n        this.zone.run(() => {\n          this.viewUpdated.emit(event);\n        });\n      });\n      \n      \n      // Pass our defaults to Vizceral in the case that it has different defaults.\n      this.instance.setOptions({\n        allowDraggingOfNodes: this.allowDraggingOfNodes,\n        showLabels: this.showLabels,\n      });\n      \n      //   //return back for this\n      //  if (!isEqual(this.filters, this.defaultProps.filters)) {\n      //     this.instance.setFilters(this.filters);\n      //   }\n      \n      //   if (!isEqual(this.definitions, this.defaultProps.definitions)) {\n      //     this.instance.updateDefinitions(this.definitions);\n      //   }\n      \n      // Finish the current call stack before updating the view.\n      // If vizceral-react was passed data directly without any asynchronous\n      // calls to retrieve the data, the initially loaded graph would not\n      // animate properly.\n      setTimeout(() => {\n        \n        // let renderers = {\n        //   global: GlobalTrafficGraph,\n        //   region: RegionTrafficGraph,\n        //   focused: FocusedTrafficGraph,\n        //   focusedChild: FocusedChildTrafficGraph,\n        //   dns: DnsTrafficGraph\n        // };\n        // console.log (\"Renderers:\");\n        // console.log (renderers);\n        // //this.instance.setRenderers(renderers);\n        \n        this.instance.setView(this.view || this.defaultProps.view, this.objectToHighlight);\n        \n        this.instance.updateData(this.traffic);\n        const perfNow = this.getPerformanceNow();\n        this.instance.animate(perfNow === null ? 0 : perfNow);\n        this.instance.updateBoundingRectCache();\n        \n        // console.log('VizceralGraph:')\n        // console.log(this.instance)\n        \n      }, 0);\n    });\n    \n    this.zone.runOutsideAngular(() => {\n      this.ro = new ResizeObserver((entries, observer) => {\n        const element = this.elementRef.nativeElement.parentElement.parentElement;\n        \n        if (!this.initialWidth) {\n          this.setSize(element.offsetWidth, element.offsetHeight);\n        }\n      });\n      \n      this.ro.observe(this.elementRef.nativeElement.parentElement.parentElement);\n    });\n  }\n  \n  ngAfterViewInit(): void {\n    // ANDY\n    //       // Pass our defaults to Vizceral in the case that it has different defaults.\n    //       this.instance.setOptions({\n    //         allowDraggingOfNodes: this.allowDraggingOfNodes,\n    //         showLabels: this.showLabels\n    //       });\n    \n  }\n  \n  public getPerformanceNow(): number | null {\n    const g = window;\n    if (g != null) {\n      const perf = g.performance;\n      if (perf != null) {\n        try {\n          const perfNow = perf.now();\n          if (typeof perfNow === 'number') {\n            return perfNow;\n          }\n        } catch (e) {\n          // do nothing\n        }\n      }\n    }\n    return null;\n  }\n  \n  ngOnDestroy(): void {\n    console.log('VizceralComponent:ngOnDestroy() - suppressing instance.destroy()');\n    if (this.ro) {\n      this.ro.disconnect();\n    }\n    if (this.instance) {\n      // ANDY//this.objectsJSON = this.instance.toJSON();\n      \n      // ANDY// this.instance.dispose(); // <-- doesn't work\n      \n      delete this.instance;\n      \n      this.instance = null;\n    }\n  }\n  \n  ngDoCheck(): void {\n    if (this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n      \n      if (changes) {\n        this.ngOnDestroy();\n        \n        this.ngOnInit();\n      }\n    }\n  }\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log('VizceralDirective:ngOnChanges())');\n    if (this.instance && changes.disabled) {\n      if (changes.disabled.currentValue !== changes.disabled.previousValue) {\n        this.ngOnDestroy();\n        \n        this.ngOnInit();\n      } else if (changes.traffic) {\n        // console.log('VizceralDirective:ngOnChanges(traffic)');\n        this.instance.updateData(this.traffic);\n      }\n    }\n    \n  }\n  \n  public vizceral(): VizceralGraph {\n    return this.instance;\n  }\n  \n  public setView(view: string []): void {\n    this.view = view;\n    this.instance.setView(this.view || this.defaultProps.view, this.objectToHighlight);\n  }\n  \n  \n  public setSize(width: number, height: number): void {\n    this.initialWidth = width;\n    this.initialHeight = height;\n    \n    if (this.instance) {\n      this.instance.setSize(width, height);\n    }\n  }\n  \n  // private updateStyles(styles) {\n  //   const styleNames = this.instance.getStyles();\n  //   const customStyles = styleNames.reduce((result, styleName) => {\n  //     result[styleName] = styles[styleName] || result[styleName];\n  //     return result;\n  //   }, {});\n  //\n  //   this.instance.updateStyles(customStyles);\n  // }\n  \n  \n  /* private setTraffic(data: any) {\n   this.initialTraffic = data;\n   if (this.instance) {\n   console.log('Data changed..')\n   this.instance.updateData(this.initialTraffic);\n   }\n   }*/\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n}                            from '@angular/core';\nimport VizceralGraph         from '@deltix/vizceral';\nimport { VizceralDirective } from './ngx-vizceral.directive';\nimport { VizceralSize }      from './ngx-vizceral.models';\n\n@Component({\n  selector: 'vizceral',\n  exportAs: 'ngxVizceral',\n  templateUrl: './ngx-vizceral.component.html',\n  styleUrls: ['./ngx-vizceral.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class VizceralComponent implements AfterViewInit, OnChanges {\n  // private json: any = null;\n  public initData: any = null;\n  \n  // @Input()\n  // set data(data: string) {\n  //   this.setJSON(data);\n  // }\n  \n  @Input() size: VizceralSize = {width: null, height: null};\n  @Input() view: any = null;\n  @Input() showLabels: any = null;\n  @Input() filters: any = null;\n  @Input() objectToHighlight: any = null;\n  @Input() match: any = null;\n  @Input() modes: any = null;\n  @Input() allowDraggingOfNodes: any = null;\n  @Input() styles: any = null;\n  @Input() targetFramerate: any = null;\n  @Input() initialSize: {\n    width: number,\n    height: number,\n  };\n  @Input() useCurrentInitialSize: boolean;\n  \n  @Output() viewChanged = new EventEmitter<any>();\n  @Output() viewUpdated = new EventEmitter<any>();\n  @Output() objectHighlighted = new EventEmitter<any>();\n  @Output() nodeContextSizeChanged = new EventEmitter<any>();\n  @Output() matchesFound = new EventEmitter<any>();\n  @Output() nodeUpdated = new EventEmitter<any>();\n  @Output() objectHovered = new EventEmitter<any>();\n  \n  @HostBinding('class.vizceral')\n  @ViewChild(VizceralDirective, {static: true}) directiveRef: VizceralDirective;\n  \n  constructor() {\n  }\n  \n  // @Input() traffic: any = null;\n  @Input()\n  set traffic(data: any) {\n    this.setTraffic(data);\n  }\n  \n  ngAfterViewInit(): void {\n    // if (this.json != null) {\n    //   this.setJSON(this.json, true);\n    // }\n  }\n  \n  ngOnChanges(changes: SimpleChanges): void {\n  \n  }\n  \n  vizceral(): VizceralGraph {\n    return this.directiveRef.vizceral();\n  }\n  \n  setView(view: string[]) {\n    this.directiveRef.setView(view);\n  }\n\n  locate(searchText: string) {\n    // console.log('Locating nodes that match: ' + searchText);\n    this.vizceral().findNodes(searchText);\n  }\n  \n  private setTraffic(data: any): void {\n    this.initData = data;\n    // if (data != null) {\n    //   this.initData['QuantServer']._particleSystem = {\n    //       isEnabled: true,\n    //       viscousDragCoefficient: 0.2,\n    //       hooksSprings: {\n    //         restLength: 50,\n    //         springConstant: 0.2,\n    //         dampingConstant: 0.1\n    //       },\n    //       particles: {\n    //         mass: 1\n    //       }\n    //   };\n    // }\n    if (this.directiveRef && this.directiveRef.vizceral()) {\n      // console.log('VizceralComponent:setTraffic');\n      // console.log(data)\n      // console.log(this.directiveRef.vizceral());\n      this.vizceral().updateData(data);\n      \n      // console.log('VizceralGraph:')\n      // console.log(this.vizceral())\n      // console.log('Graph:')\n      \n      // let graph = this.vizceral().getGraph('QuantServer', null) as TrafficGraph;\n      // if (graph) {\n      //   let options = {\n      //     ...graph.getPhysicsOptions (),\n      //     isEnabled: true,\n      //     jaspersReplusionBetweenParticles: true,\n      //     viscousDragCoefficient: 0.2,\n      //     hooksSprings: {\n      //       restLength: 50,\n      //       springConstant: 0.2,\n      //       dampingConstant: 0.1\n      //     },\n      //     particles: {\n      //       mass: 1\n      //     }\n      //   };\n      \n      //   let flag = false;\n      //   let _particleSystem_isEnabled = false;\n      //   if (hasOwnPropF.call(options, 'isEnabled')) {\n      //     let { isEnabled } = options;\n      //     options = { ...options};\n      //     delete options.isEnabled;\n      //     if (typeof isEnabled !== 'boolean') {\n      //       console.warn('Got non-boolean value for PhysicsOptions.isEnabled, coercing to boolean:', isEnabled);\n      //       isEnabled = !!isEnabled;\n      //     }\n      //     flag = _particleSystem_isEnabled !== isEnabled;\n      //     _particleSystem_isEnabled = isEnabled;\n      //   }\n      //   console.log (\"IS ENABLED: \" + flag);\n      \n      //   console.log(graph.getPhysicsOptions ());\n      //   console.log(options);\n      //   graph.setPhysicsOptions(options);\n      //   console.log(graph);\n      // }\n      \n    }\n  }\n  \n  // private setJSON(json: string, force?: boolean): void {\n  //   if (force || json !== this.json) {\n  //     if (this.directiveRef && this.directiveRef.vizceral()) {\n  //       // this.directiveRef.loadFromJSON(json, () => {\n  //       //   //this.dataLoaded.emit(this.directiveRef.vizceral());\n  //       // });\n  //     }\n  \n  //     this.json = json;\n  //   }\n  // }\n}\n","<div class=\"vizceral\">\n  <canvas\n      (matchesFound)=\"matchesFound.emit($event)\"\n      (nodeContextSizeChanged)=\"nodeContextSizeChanged.emit($event)\"\n      (objectHighlighted)=\"objectHighlighted.emit($event)\"\n      (viewChanged)=\"viewChanged.emit($event)\"\n      (viewUpdated)=\"viewUpdated.emit($event)\"\n      [allowDraggingOfNodes]=\"allowDraggingOfNodes\"\n      [initialSize]=\"initialSize\"\n      [useCurrentInitialSize]=\"useCurrentInitialSize\"\n      [filters]=\"filters\"\n      [match]=\"match\"\n      [modes]=\"modes\"\n      [objectToHighlight]=\"objectToHighlight\"\n      [showLabels]=\"showLabels\"\n      [size]=\"size\"\n      [styles]=\"styles\"\n      [traffic]=\"initData\"\n      [view]=\"view\" style=\" width:100%; height:100%\"\n      vizceral>\n  </canvas>\n  \n  <div class=\"vizceral-notice\"></div>\n\n</div>\n","import { CommonModule }                     from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { VizceralComponent }                from './ngx-vizceral.component';\nimport { VizceralDirective }                from './ngx-vizceral.directive';\n\n\n@NgModule({\n  declarations: [\n    VizceralComponent,\n    VizceralDirective,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    CommonModule,\n    VizceralComponent,\n    VizceralDirective,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class VizceralModule {\n}\n","/*\n * Public API Surface of ngx-vizceral\n */\n\nexport * from './lib/ngx-vizceral.service';\nexport * from './lib/ngx-vizceral.component';\nexport * from './lib/ngx-vizceral.directive';\nexport * from './lib/ngx-vizceral.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}