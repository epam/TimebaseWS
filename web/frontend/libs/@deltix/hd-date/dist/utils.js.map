{"version":3,"sources":["utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import { HdDate } from \"./hd-date\";\nimport { DateTimeFormat, FullNameDigit } from \"./types\";\n\nexport const DENOMINATOR = 1000;\nexport const REGULAR_LETTERS = /[A-Za-z]+/ig;\nexport const REGULAR_ISO = /[0-9]{4}\\-[0-9][0-9]?\\-[0-9][0-9]?[T]?[0-9][0-9]?:[0-9][0-9]?:[0-9][0-9]?\\.?[0-9]?[0-9]?[0-9]?/;\nexport const REGULAR_TIME = \"[0-9][0-9]?\\:[0-9][0-9]?\\:[0-9][0-9]?\";\nexport const REGULAR_DATE = \"[A-Za-z]{3}\\,? [A-Za-z]{3} [0-9]{2} [0-9]{4}?\";\nexport const REGULAR_LOCAL_DATE = \"[0-9]+\\/[0-9]+\\/[0-9]{4}\";\nexport const REGULAR_UTC_DATE = \"[A-Za-z]{3}, [0-9]{2} [A-Za-z]{3} [0-9]{4}\";\nexport const FORMAT_DEFAULT = \"MM/dd/yyyy hh:mm:ss.fffffffff tt\";\nexport const FORMAT_ISO = \"yyyy-MM-dd HH:mm:ss.fffffffff\";\n\nlet HOURS: number;\n\nexport function getValueDigit(date: HdDate, format: string[], locale: string = \"en-us\"): string[] {\n    const values: string[] = [];\n    for (let i = 0; i < format.length; i++) {\n        let value;\n        if (format[i] === DateTimeFormat.tt) {\n            value = date.getHours() >= 12 ? \"PM\" : \"AM\";\n        } else if (format[i] === DateTimeFormat.yy) {\n            value = date.getFullYear().toString().slice(2, 4);\n        } else if (format[i] === DateTimeFormat.hh) {\n            const hours = date.getHours();\n            value = hours >= 13 ?\n                (hours - 12).toString() :\n                (hours === 0 ? 12 : hours).toString();\n        } else if (format[i] === DateTimeFormat.MMMM) {\n            value = new Intl.DateTimeFormat(locale, { month: \"long\" }).format(new Date(date.getEpochMillis()));\n        } else if (format[i] === DateTimeFormat.MMM) {\n            value = new Intl.DateTimeFormat(locale, { month: \"short\" }).format(new Date(date.getEpochMillis()));\n        } else if (format[i] === DateTimeFormat.Www) {\n            value = `W${date.getWeek()}`;\n        } else {\n            if (format[i].length === 3) {\n                const mili = date.getMilliseconds().toString();\n                value = addLiddingZero(4, mili);\n            } else if (format[i].length === 6) {\n                const mili = addLiddingZero(4, date.getMilliseconds().toString());\n                const micro = addLiddingZero(4, date.getMicroseconds().toString());\n                value = mili + micro;\n            } else if (format[i].length === 9) {\n                const mili = addLiddingZero(4, date.getMilliseconds().toString());\n                const nanosFraction = addLiddingZero(7, date.getNanosFraction().toString());\n                value = mili + nanosFraction;\n            } else {\n                const nameDigit = getFullNameDigit(format[i] as DateTimeFormat);\n                value = nameDigit === FullNameDigit.Month ?\n                    (date[`get${nameDigit}`]() + 1).toString() :\n                    (date[`get${nameDigit}`]()).toString();\n            }\n        }\n        values.push(value);\n    }\n\n    return values;\n}\n\nexport function getFullNameDigit(digit: DateTimeFormat): FullNameDigit {\n    if (digit === DateTimeFormat.MM) {\n        return FullNameDigit.Month;\n    } else if (digit === DateTimeFormat.dd) {\n        return FullNameDigit.Date;\n    } else if (digit === DateTimeFormat.yyyy || digit === DateTimeFormat.yy || digit === DateTimeFormat.YYYY) {\n        return FullNameDigit.FullYear;\n    } else if (digit === DateTimeFormat.HH || digit === DateTimeFormat.hh) {\n        return FullNameDigit.Hours;\n    } else if (digit === DateTimeFormat.mm) {\n        return FullNameDigit.Minutes;\n    } else if (digit === DateTimeFormat.ss) {\n        return FullNameDigit.Seconds;\n    }\n    return FullNameDigit.Milliseconds;\n}\n\nexport function padStart(numberSymbol: number, word: string): string {\n    while (numberSymbol !== 0) {\n        word = \"0\" + word;\n        numberSymbol--;\n    }\n    return word;\n}\n\nexport function getStringByFormat(values: string[], format: string, formatString?: string): string {\n    const separators = format.match(/[\\/,\\-,\\.,\\:,\\,,\\\\,\\s]/ig);\n    const letters = formatString != null ? formatString.match(REGULAR_LETTERS) : null;\n    const arrayFormat: string[] = format.match(REGULAR_LETTERS);\n    let str = \"\";\n    let count = 0;\n    for (let i = 0; i < arrayFormat.length; i++) {\n        if (values[i] != null) {\n            if (arrayFormat[i].length > values[i].length) {\n                if (\n                    (arrayFormat[i].length === 3 ||\n                        arrayFormat[i].length === 6 ||\n                        arrayFormat[i].length === 9) &&\n                    arrayFormat[i] !== DateTimeFormat.Www\n                ) {\n                    const val =\n                        values[i].length < 3\n                            ? padStart(3 - values[i].length, values[i])\n                            : values[i];\n                    str +=\n                        val + padStart(arrayFormat[i].length - val.length, \"\");\n                } else if (\n                    arrayFormat[i] === DateTimeFormat.MMM ||\n                    arrayFormat[i] === DateTimeFormat.MMMM ||\n                    arrayFormat[i] === DateTimeFormat.Www\n                ) {\n                    str += values[i];\n                } else {\n                    str += padStart(\n                        arrayFormat[i].length - values[i].length,\n                        values[i]\n                    );\n                }\n            } else {\n                str += values[i];\n            }\n        } else {\n            if (arrayFormat[i] === DateTimeFormat.tt) {\n                str += letters != null ? letters[0] : HOURS > 12 ? \"PM\" : \"AM\";\n            } else {\n                str += padStart(arrayFormat[i].length, \"\");\n            }\n        }\n        if (separators != null && separators[count] != null) {\n            str += separators[count];\n            count++;\n        }\n    }\n    return str;\n}\n\nexport function getEndTime(hdDate: HdDate): string {\n    const sec = hdDate.getSeconds().toString();\n    return `:${addLiddingZero(3, sec)} `;\n}\n\nexport function setValue(digit: DateTimeFormat, value: number, date: HdDate) {\n    if (digit.length >= 3 && digit.length !== 4) {\n        if (digit.length === 3) {\n            date.setMilliseconds(value);\n        } else if (digit.length === 6 || digit.length === 9) {\n            let mili = value.toString().slice(0, 3);\n            let nanoFr = value.toString().slice(3, value.toString().length);\n            if (mili !== \"\") {\n                date.setMilliseconds(Number(mili));\n            }\n            if (nanoFr !== \"\") {\n                if (nanoFr.length < 4) {\n                    date.setNanosFraction(Number(nanoFr) * 1000);\n                } else {\n                    date.setNanosFraction(Number(nanoFr));\n                }\n            }\n        }\n    } else {\n        const nameDigit = getFullNameDigit(digit);\n        if (nameDigit != null) {\n            if (nameDigit === FullNameDigit.Month) {\n                date[`set${nameDigit}`](value - 1);\n            } else {\n                date[`set${nameDigit}`](value);\n            }\n        }\n    }\n}\n\nexport function checkData(digit: DateTimeFormat, value: string, hdDate: HdDate): boolean {\n    const nameDigit = getFullNameDigit(digit);\n    if ((nameDigit === FullNameDigit.Month && hdDate[`get${nameDigit}`]() + 1 !== parseInt(value)) ||\n        (nameDigit === FullNameDigit.Date && hdDate[`get${nameDigit}`]() !== parseInt(value))) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getValue(values: string[], digit: string): string {\n    let arrayValues: string[] = [];\n    for (let i = 0; i < 3; i++) {\n        if (digit === DateTimeFormat.yyyy && values[i].length === 4) {\n            return values[i];\n        } else if (values[i].length !== 4) {\n            arrayValues.push(values[i]);\n        }\n    }\n\n    for (const value of arrayValues) {\n        if ((digit === DateTimeFormat.dd && parseInt(value) > 12) ||\n            (digit === DateTimeFormat.MM && parseInt(value) <= 12)) {\n            return value;\n        }\n    }\n    return arrayValues[arrayValues.length - 1];\n}\n\nexport function correctHours(value: string, digit: string): string {\n    let returnValue = value;\n    if (digit === DateTimeFormat.HH && parseInt(value) < 12) {\n        returnValue = (parseInt(value) + 12).toString();\n    } else if (digit === DateTimeFormat.hh && parseInt(value) > 12) {\n        returnValue = (parseInt(value) - 12).toString();\n    }\n\n    if (returnValue.length === 1) {\n        return (\"0\" + returnValue);\n    } else {\n        return returnValue;\n    }\n}\n\nexport function convertDate(values: string, format: string[]): string[] {\n    const createdValues: string[] = [];\n    const letters = values.match(REGULAR_LETTERS);\n    const separator = values.match(/[\\/,\\-,\\.,\\\\]/);\n    const arrayValues: string[] = values.match(/\\d+/ig);\n    let count = 0;\n    for (let i = 0; i < format.length; i++) {\n        if (separator != null) {\n            if (format[0] === DateTimeFormat.yyyy || arrayValues[0].length === 4) {\n                if (format[i] === DateTimeFormat.dd || format[i] === DateTimeFormat.MM || format[i] === DateTimeFormat.yyyy || format[i] === DateTimeFormat.yy) {\n                    createdValues.push(getValue(arrayValues, format[i]));\n                    count++;\n                }\n            } else {\n                if (separator[0] === \".\" || separator[0] === \"-\" || separator[0] === \",\") {\n                    if (format[i] === DateTimeFormat.dd) {\n                        createdValues.push(arrayValues[0]);\n                        count++;\n                    } else if (format[i] === DateTimeFormat.MM) {\n                        createdValues.push(arrayValues[1]);\n                        count++;\n                    } else if (format[i] === DateTimeFormat.yyyy) {\n                        createdValues.push(getValue(arrayValues, format[i]));\n                        count++;\n                    } else if (format[i] === DateTimeFormat.yy) {\n                        createdValues.push(arrayValues[2]);\n                        count++;\n                    }\n                } else {\n                    if (format[i] === DateTimeFormat.dd || format[i] === DateTimeFormat.MM || format[i] === DateTimeFormat.yyyy || format[i] === DateTimeFormat.yy) {\n                        createdValues.push(getValue(arrayValues, format[i]));\n                        count++;\n                    } else if (format[i] === DateTimeFormat.yy) {\n                        createdValues.push(arrayValues[2]);\n                        count++;\n                    }\n                }\n            }\n        }\n        if (!isNaN(parseInt(arrayValues[count]))) {\n            if (format[i] === DateTimeFormat.HH) {\n                HOURS = parseInt(arrayValues[count]);\n                if (letters != null && letters[0] === \"PM\") {\n                    createdValues.push(correctHours(arrayValues[count], format[i]));\n                } else {\n                    createdValues.push(arrayValues[count]);\n                }\n                count++;\n            } else if (format[i] === DateTimeFormat.hh) {\n                HOURS = parseInt(arrayValues[count]);\n                createdValues.push(correctHours(arrayValues[count], format[i]));\n                count++;\n            } else if (format[i] === DateTimeFormat.mm) {\n                createdValues.push(arrayValues[count]);\n                count++;\n            } else if (format[i] === DateTimeFormat.ss) {\n                createdValues.push(arrayValues[count]);\n                count++;\n            } else if (format[i].length === 3 || format[i].length === 6 || format[i].length === 9) {\n                createdValues.push(arrayValues[count].slice(0, format[i].length));\n                count++;\n            }\n        }\n    }\n    return createdValues;\n}\n\nfunction addLiddingZero(limit: number, digit: string): string {\n    return digit.length < limit ? padStart(limit - 1 - digit.length, digit) : digit;\n}"]}