{"version":3,"file":"multi-autocomplete.component.ngfactory.js","sourceRoot":"","sources":["../../../../src/ts/components/multi-autocomplete.component.ngfactory.ts","../../../../src/ts/components/multi-autocomplete.component.ts.MultiAutocompleteComponent.html"],"names":[],"mappings":";;;;;;;;;;;;;;;qECIgB,0LAAwG,YAA9E;;wBAAgC;MAA1D,wBAAwG,KAAA,yGAA8B;qEAI1H,iHAAyD,KACrD;;;;;;;;;;;wBAAqJ;MAA3F;;wBAAmC;MAAC;;wBAA4B;MAA1H,yiBAAqJ,iDAAvD,mBAA4B,iBAA1H,YAAqJ,EAAvD,SAA4B,2BAA1H,iaAAqJ;qEAGrJ,iKAAsL,KAClL,4JAAgM,YAApL;;wBAA6B;MAAC;;wBAAgC;MAA1E,uPAAgM,GAAjE,wBAAgE,KAA/L,0KAAgM,iDAAjE,gFAAgE,eAA/L,YAAgM,EAAjE,SAAgE,GAApH,qCAAmD,qBAA9H,YAAgM,EAArH,SAAmD,mDADpC,iCAA8C,qBAAC,+CAAwC,qBAArL,YAAsL,EAAxF,SAA8C,EAAC,SAAwC;qEAL7L,2HAAyE,KACrE,0LAAyD,IAGzD,kHAAuC,KACnC,wNAAsL,GAI1L,eAAY,iDAR0B,mBAAkB,aAAxD,YAAyD,EAAnB,SAAkB,GAIhD,mBAAsD,kBAA1D,YAAsL,EAAlL,SAAsD;qEANtE,8GAAqD,KACjD,0LAAyE,iDAAzB,mBAAwB,mBAAxE,YAAyE,EAAzB,SAAwB;iLANxF,iWAAsD,IAClD,wKAA8E,YAA1C;;wBAAyC;MAA7E,wBAA8E,KAC1E;;;;;;;;;;;wBAA2U;MAA7R;;wBAA0B;MAAwB;;wBAAyB;MAAC;;wBAAyB;MAAC;;wBAAyB;MAAC;;wBAA6B;MAAC;;wBAAyB;MAAC;;yBAAuB;MAA7P,ykBAA2U,IAC3U,2LAAwG,IACxG,uJAAgE,KAC5D,2LAAqD,iDAL5D,qCAA2B,EAAC,mBAAoB,WAArD,YAAsD,EAAjD,SAA2B,EAAC,SAAoB,GAEiN,oBAAqB,WAArO,oBAA0B,eAAxE,YAA2U,EAA7E,UAAqB,EAArO,UAA0B,GAChE,qBAAiB,WAAzB,aAAwG,EAAhG,UAAiB,GAEc,qBAAiB,WAApD,aAAqD,EAAlB,UAAiB,mDAHiB,mBAAsB,eAAgN,mBAA2B,cAA1U,4VAA2U,EAAlQ,SAAsB,EAAgN,SAA2B,EAA1U,4EAA2U","sourcesContent":["import * as i0 from '@angular/core';\ni0.ComponentFactory;\n","\n        <div class=\"deltix-autocomplete\" [ngClass]=\"cssClass\">\n            <div class=\"autocomplete-container\" (mousedown)=\"onAutocompleteClick($event)\">\n                <textarea type=\"text\" spellcheck=\"spellcheck\" [(ngModel)]=\"selectedText\" [title]=\"selectedText\" (focus)=\"onFocus($event)\" (input)=\"onInput($event)\" (keyup)=\"onKeyUp($event)\" (keydown)=\"onKeyDown($event)\" (click)=\"onClick($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" class=\"autocomplete-input\" [placeholder]=\"placeholder\"></textarea>\n                <button *ngIf=\"!disabled\" (click)=\"toggleDropdown($event)\" type=\"button\" class=\"autocomplete-caret-btn\"><i class=\"autocomplete-caret\"></i></button>\n                <div class=\"autocomplete-dropdown-container\" #dropdownContainer>\n                    <div class=\"autocomplete-dropdown\" *ngIf=\"!disabled\">\n                        <div class=\"autocomplete-dropdown-menu-wrapper\" *ngIf=\"isShowDropdown()\">\n                            <div class=\"autocomplete-mini-filter\" *ngIf=\"miniFilter\">\n                                <input type=\"text\" #miniFilter class=\"autocomplete-input\" (click)=\"onMiniFilterClick($event)\" [(ngModel)]=\"miniFilterText\" placeholder=\"Search...\" />\n                            </div>\n                            <ul class=\"autocomplete-dropdown-menu\">\n                                <li *ngFor=\"let item of valuesForRender; first as isFirst\" class=\"autocomplete-dropdown-item\" [class.autocomplete-active]=\"isSelected(item)\" [title]=\"getTitleAttrValueForItem(item)\">\n                                    <a href=\"#\" (click)=\"select(item,$event)\" (keyup)=\"onElementKeyUp($event)\" [appAutocompleteDescription]=\"highlightTitle(item)\" [ngClass]=\"{'active':isFirst && allowSelectFirst && hasInput()}\"></a>\n                                </li>\n                            </ul>\n                            <ng-content></ng-content>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    "]}