{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/ts/utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["export function smartSplit(text: string, separator: string, literal: string): string[] {\n    const textArray = [];\n    let str = '';\n    for (const symbol of text) {\n        if (symbol === literal) {\n            if (!str.includes(literal)) {\n                str += symbol;\n            } else {\n                textArray.push(str.replace(literal, ''));\n                str = '';\n            }\n        } else if (symbol === separator && !str.includes(literal)) {\n            if (str !== '') {\n                textArray.push(str);\n                str = '';\n            }\n        } else {\n            str += symbol;\n        }\n    }\n    if (str !== '') {\n        textArray.push(str);\n    }\n    return textArray;\n}\n\nexport function smartLastIndexOf(text: string, separator: string, literal: string): number {\n    const countLiteral = getCountLiteral(text, literal);\n    if (countLiteral === 0) {\n        return text.lastIndexOf(separator);\n    } else if (countLiteral % 2 === 0) {\n        const lastIndexLiteral = text.lastIndexOf(literal);\n        if (text.substring(lastIndexLiteral).includes(separator)) {\n            return text.lastIndexOf(separator);\n        }\n        const str = text.substring(0, lastIndexLiteral);\n        return str.lastIndexOf(literal) - 1;\n    }\n    return text.lastIndexOf(literal) - 1;\n}\n\nexport function smartIndexOf(text: string, separator: string, literal: string): number {\n    const countLiteral = getCountLiteral(text, literal);\n    const index = text.indexOf(separator);\n    if (countLiteral != null && countLiteral % 2 === 1 && index !== -1) {\n        return text.indexOf(literal) + 1;\n    } else if (text.indexOf(literal) === 0 && countLiteral % 2 === 0) {\n        return text.replace(literal, '').indexOf(literal) + 2;\n    }\n    return index;\n}\n\nexport function getCountLiteral(text: string, literal: string): number {\n    let count = 0;\n    for (const symbol of text) {\n        if (symbol === literal) {\n            count++;\n        }\n    }\n    return count;\n}\n\nexport function correctPasteString(text: string, separator: string, literal: string): string {\n    let count = 0;\n    let str = '';\n    for (const symbol of text) {\n        if (symbol === literal) {\n            count++;\n            if (count === 2) {\n                count = 0;\n                str += symbol;\n                str += separator;\n            } else {\n                if (str !== '' && str[str.length - 1] !== literal && str[str.length - 1] !== separator) {\n                    str += separator;\n                }\n                str += symbol;\n            }\n        } else {\n            str += symbol;\n        }\n    }\n    return str;\n}\n\nexport function smartJoin(selectedValues: string[], separator: string, literal: string): string {\n    return selectedValues.map(value =>\n        value != null && value.includes(separator) ? `${literal}${value}${literal}` : value\n    ).join(separator);\n}\n"]}