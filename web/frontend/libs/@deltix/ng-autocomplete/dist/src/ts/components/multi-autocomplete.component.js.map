{"version":3,"file":"multi-autocomplete.component.js","sourceRoot":"","sources":["../../../../src/ts/components/multi-autocomplete.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ExtendedTextareaComponent } from './extended-textarea.component';\n\n// tslint:disable:max-line-length\n@Component({\n    selector: 'deltix-ng-multi-autocomplete',\n    template: `\n        <div class=\"deltix-autocomplete\" [ngClass]=\"cssClass\">\n            <div class=\"autocomplete-container\" (mousedown)=\"onAutocompleteClick($event)\">\n                <textarea type=\"text\" spellcheck=\"spellcheck\" [(ngModel)]=\"selectedText\" [title]=\"selectedText\" (focus)=\"onFocus($event)\" (input)=\"onInput($event)\" (keyup)=\"onKeyUp($event)\" (keydown)=\"onKeyDown($event)\" (click)=\"onClick($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" class=\"autocomplete-input\" [placeholder]=\"placeholder\"></textarea>\n                <button *ngIf=\"!disabled\" (click)=\"toggleDropdown($event)\" type=\"button\" class=\"autocomplete-caret-btn\"><i class=\"autocomplete-caret\"></i></button>\n                <div class=\"autocomplete-dropdown-container\" #dropdownContainer>\n                    <div class=\"autocomplete-dropdown\" *ngIf=\"!disabled\">\n                        <div class=\"autocomplete-dropdown-menu-wrapper\" *ngIf=\"isShowDropdown()\">\n                            <div class=\"autocomplete-mini-filter\" *ngIf=\"miniFilter\">\n                                <input type=\"text\" #miniFilter class=\"autocomplete-input\" (click)=\"onMiniFilterClick($event)\" [(ngModel)]=\"miniFilterText\" placeholder=\"Search...\" />\n                            </div>\n                            <ul class=\"autocomplete-dropdown-menu\">\n                                <li *ngFor=\"let item of valuesForRender; first as isFirst\" class=\"autocomplete-dropdown-item\" [class.autocomplete-active]=\"isSelected(item)\" [title]=\"getTitleAttrValueForItem(item)\">\n                                    <a href=\"#\" (click)=\"select(item,$event)\" (keyup)=\"onElementKeyUp($event)\" [appAutocompleteDescription]=\"highlightTitle(item)\" [ngClass]=\"{'active':isFirst && allowSelectFirst && hasInput()}\"></a>\n                                </li>\n                            </ul>\n                            <ng-content></ng-content>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        multi: true,\n        useExisting: forwardRef(() => MultiAutocompleteComponent),\n    }]\n})\n// tslint:enable:max-line-length\nexport class MultiAutocompleteComponent extends ExtendedTextareaComponent implements OnInit, ControlValueAccessor, OnDestroy, OnChanges {\n\n    @Input()\n    protected values: Array<any>;\n    @Input()\n    protected highlight = true;\n    @Input()\n    public disabled = false;\n    @Input()\n    public placeholder = '';\n    @Input()\n    protected valueGetter: (value: any) => string;\n    @Input()\n    protected descriptionGetter: (value: any, highlightFunc: (str: string) => string) => string | HTMLElement;\n    @Input()\n    protected stripTags = true;\n    @Input()\n    protected allowSelectFirst = false;\n    @Input()\n    public dropdown = false;\n    @Input()\n    protected miniFilter = false;\n    @Input()\n    public cssClass: string;\n    @Input()\n    public spellcheck = true;\n    @Output()\n    protected changeInput: EventEmitter<string> = new EventEmitter<string>();\n    @Output()\n    protected showDropdownChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    @ViewChild('dropdownContainer', { static: true })\n    protected dropdownContainer: ElementRef;\n    @ViewChild('miniFilter', { static: true })\n    protected miniFilterElementRef: ElementRef;\n\n    public miniFilterText = '';\n\n    constructor(protected element: ElementRef) {\n        super(element);\n    }\n\n    public writeValue(obj: any): void {\n        if (obj instanceof Array) {\n            this.selectedValues = obj;\n        } else {\n            this.selectedValues = [obj];\n        }\n        this.selectedText = this.prepareInput(this.getValueForItems(this.selectedValues));\n    }\n\n    public onKeyUp(event: KeyboardEvent) {\n        if (event.keyCode === 27) {\n            this.showDropdown = false;\n            return;\n        }\n\n        if (this.inputElement.selectionStart === this.inputElement.value.length) {\n            if (event.keyCode === 40) { // down\n                const el = <HTMLElement>this.dropdownContainer.nativeElement;\n                const items = el.querySelectorAll('.autocomplete-dropdown-item');\n                if (items.length > 0) {\n                    const first: HTMLElement = <HTMLElement>items.item(0).firstElementChild;\n                    first.focus();\n                }\n                return;\n            }\n        } else {\n            this.updateCursorPos();\n            this.showDropdown = true;\n        }\n\n        if (this.selectedText.length === 0) {\n            this.selectedValues.length = 0;\n            this.onChange([]);\n        }\n    }\n\n    public select(item: any, event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.isTrue(this.dropdown)) {\n            const pos = this.selectedValues.indexOf(item);\n            if (pos === -1) {\n                this.selectedValues.push(item);\n            } else {\n                this.selectedValues.splice(pos, 1);\n            }\n        } else {\n            if (this.cursorPosition != null) {\n                const pos = this.getInputPos(this.cursorPosition);\n                const v = this.getValueForItem(item);\n                this.selectedText = this.selectedText.substr(0, pos.left) + v + this.selectedText.substr(pos.left + pos.length);\n                setTimeout(() => {\n                    this.inputElement.selectionStart = this.inputElement.selectionEnd = pos.left + v.length;\n                });\n                this.updateItemsFromInput();\n            } else {\n                if (this.selectedValues.indexOf(item) >= 0) {\n                    return;\n                }\n                this.selectedValues.push(item);\n            }\n        }\n\n        this.selectedText = this.prepareInput(this.getValueForItems(this.selectedValues));\n        this.onChange(this.selectedValues.slice());\n        if (!this.miniFilter) {\n            this.inputElement.focus();\n            this.showDropdown = false;\n        }\n        this.currentInput = null;\n    }\n\n    public isSelected(value: any): boolean {\n        return this.selectedValues.indexOf(value) >= 0;\n    }\n\n    protected getValueForItems(items: Array<any>): string {\n        let str = '';\n        for (let i = 0; i < items.length; i++) {\n            str += this.getValueForItem(items[i]);\n            if (i + 1 !== items.length) {\n                str += this.separator;\n            }\n        }\n        return str;\n    }\n\n    protected getTitleForItem(item: any): string {\n        if (item != null && typeof this.descriptionGetter === 'function') {\n            return this.descriptionGetter.call(null, item, (str: string) => {\n                const selectedText = (this.hasInput() ? this.currentInput : this.selectedText).split(this.separator);\n                for (let i = 0; i < selectedText.length; i++) {\n                    str = this.highlightText(str, selectedText[i]);\n                }\n                return str;\n            });\n        }\n\n        return this.getValueForItem(item);\n    }\n\n    public onInput(event: KeyboardEvent) {\n        this.updateItemsFromInput();\n\n        this.updateCursorPos();\n        if (!this.showDropdown) {\n            this.showDropdown = true;\n        }\n    }\n\n    protected updateItemsFromInput() {\n        const str = this.selectedText.split(this.separator);\n        const values = this.values.slice();\n        values.push(...this.selectedValues);\n        this.selectedValues.length = 0;\n        for (let i = 0; i < values.length; i++) {\n            const index = str.indexOf(this.getValueForItem(values[i]));\n            if (index >= 0) {\n                this.selectedValues[index] = values[i];\n            }\n        }\n        for (let i = 0; i < this.selectedValues.length; i++) {\n            if (typeof (this.selectedValues[i]) === 'undefined') {\n                this.selectedValues.splice(i, 1);\n            }\n        }\n        this.onChange(this.selectedValues.slice());\n    }\n\n    protected onDocumentClickCallback() {\n        this.selectedText = this.getValueForItems(this.selectedValues);\n    }\n\n    protected prepareInput(str: string): string {\n        const newStr = str.replace(/\\r?\\n|\\r/g, '');\n        if (newStr !== str) {\n            return ' ' + newStr;\n        }\n        return newStr;\n    }\n\n    public onMiniFilterClick(event: MouseEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    protected inputEmit(str: string) {\n        if (this.miniFilter) {\n            return;\n        }\n        this.changeInput.emit(str);\n    }\n\n    public get valuesForRender(): Array<any> {\n        if (!this.miniFilter && this.miniFilterText.length === 0 && this.miniFilterText.trim().length === 0) {\n            return this.values;\n        }\n        const filter = this.miniFilterText.trim().toLowerCase();\n        return this.values.filter(((i) => {\n            const value = this.getValueForItem(i);\n            return value.toLowerCase().lastIndexOf(filter) !== -1;\n        }));\n    }\n\n    protected setShowDropdown(value: boolean) {\n        if (value && this.miniFilter && this.dropdown) {\n            setTimeout(() => {\n                if (this.miniFilterElementRef == null) {\n                    return;\n                }\n                const element = <HTMLInputElement>this.miniFilterElementRef.nativeElement;\n                if (element != null) {\n                    element.focus();\n                }\n            });\n        }\n        super.setShowDropdown(value);\n    }\n}\n"]}