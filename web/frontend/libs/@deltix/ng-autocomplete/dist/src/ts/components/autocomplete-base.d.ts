import { AfterViewChecked, AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare abstract class AutocompleteBase implements ControlValueAccessor, OnDestroy, OnChanges, AfterViewInit, AfterViewChecked, OnChanges, OnInit {
    protected element: ElementRef;
    protected inputElement: HTMLInputElement;
    protected onDocumentClick: () => any;
    protected skipDocumentClick: boolean;
    protected onChange: any;
    protected onTouched: any;
    protected changeInput: EventEmitter<string>;
    protected valueGetter: (value: any) => string;
    protected descriptionGetter: (value: any, highlightFunc: (str: string) => string) => string | HTMLElement;
    protected highlight: boolean;
    protected stripTags: boolean;
    protected values: Array<any>;
    protected dropdownOuterContainer: HTMLElement;
    protected dropdownContainer: ElementRef;
    protected onDocumentEvent: () => void;
    protected showDropdownChange: EventEmitter<boolean>;
    protected tempDiv: HTMLElement;
    protected decryptionCache: {
        [key: string]: string | HTMLElement;
    };
    private _showDropdown;
    selectedText: string;
    disabled: boolean;
    cssClass: string;
    showDropdown: boolean;
    constructor(element: ElementRef);
    protected setShowDropdown(value: boolean): void;
    protected onElementKeyUp(event: KeyboardEvent): void;
    onAutocompleteClick(event: any): void;
    onInput(event: KeyboardEvent): void;
    protected inputEmit(str: string): void;
    onFocus(event: Event): void;
    protected toggleDropdown(event: Event): void;
    protected highlightTitle(item: any): string | HTMLElement;
    protected escapeRegExp(str: string): string;
    protected highlightText(text: string, highlightStr: string): string;
    protected getValueForItem(item: any, separator?: string, literal?: string): string;
    protected getTitleForItem(item: any): string | HTMLElement;
    protected stripTagsFromString(str: string): string;
    protected initInputElement(): void;
    protected onDocumentClickCallback(): void;
    protected isFalse(value: boolean | string): boolean;
    protected isTrue(value: boolean | string): boolean;
    protected isShowDropdown(): boolean;
    protected updateDropdownPosition(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    ngOnDestroy(): void;
    isSelected(value: any): boolean;
    onKeyUp(event: KeyboardEvent): void;
    onInputClick(event: Event): void;
    getTitleAttrValueForItem(value: any): string;
    select(item: any, event: Event): void;
    abstract onBlur(event: Event): void;
    abstract writeValue(obj: any): void;
}
