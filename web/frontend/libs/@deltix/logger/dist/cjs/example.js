"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("./index");
var configuration_1 = require("./configuration");
index_1.error('I am error !');
index_1.error('I am error !', 'I am error 1!', 'I am error 2!');
index_1.debug('I am debug !');
index_1.info('I am info !');
index_1.trace('I am trace !');
index_1.warn('I am warn !');
console.time('log');
index_1.info("I am info !");
console.timeEnd('log');
console.info('namespace');
var ns = index_1.namespace('NS');
ns.error('I am error !');
ns.debug('I am debug !');
ns.info('I am info !');
ns.trace('I am trace !');
ns.warn('I am warn !');
console.info('set level for namespace');
ns.setLevel('error');
ns.error('I am error !');
ns.debug('I am debug !');
ns.info('I am info !');
ns.trace('I am trace !');
ns.warn('I am warn !');
ns.setLevel(void 0);
ns.error('I am error !');
ns.debug('I am debug !');
ns.info('I am info !');
ns.trace('I am trace !');
ns.warn('I am warn !');
var domAppender = function (time, level, ns, message) {
    var div = document.createElement('div');
    div.setAttribute('style', configuration_1.STYLES[level]);
    div.innerText = time + " - " + (ns || '') + " " + message;
    document.body.appendChild(div);
};
console.info('domAppender');
index_1.setAppenders([domAppender]);
index_1.error('I am error !');
index_1.debug('I am debug !');
index_1.info('I am info !');
index_1.trace('I am trace !');
index_1.warn('I am warn !');
console.info('no appenders');
index_1.setAppenders([]);
index_1.error('I am error !');
index_1.debug('I am debug !');
index_1.info('I am info !');
index_1.trace('I am trace !');
index_1.warn('I am warn !');
index_1.warn({ a: 1, b: 'str' }, 'str msg');
console.info('level info');
index_1.setLevel('info');
index_1.error('I am error !');
index_1.debug('I am debug !');
index_1.info('I am info !');
index_1.trace('I am trace !');
index_1.warn('I am warn !');
console.info('no level');
index_1.setLevel(void 0);
index_1.error('I am error !');
index_1.debug('I am debug !');
index_1.info('I am info !');
index_1.trace('I am trace !');
index_1.warn('I am warn !');
index_1.error(new Error('Error'), '!');
index_1.error('loooooonggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg');
index_1.error({ a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' });
