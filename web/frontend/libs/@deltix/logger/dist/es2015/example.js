import { debug, error, info, namespace, setAppenders, setLevel, trace, warn, } from './index';
import { STYLES } from './configuration';
error('I am error !');
error('I am error !', 'I am error 1!', 'I am error 2!');
debug('I am debug !');
info('I am info !');
trace('I am trace !');
warn('I am warn !');
console.time('log');
info(`I am info !`);
console.timeEnd('log');
console.info('namespace');
const ns = namespace('NS');
ns.error('I am error !');
ns.debug('I am debug !');
ns.info('I am info !');
ns.trace('I am trace !');
ns.warn('I am warn !');
console.info('set level for namespace');
ns.setLevel('error');
ns.error('I am error !');
ns.debug('I am debug !');
ns.info('I am info !');
ns.trace('I am trace !');
ns.warn('I am warn !');
ns.setLevel(void 0);
ns.error('I am error !');
ns.debug('I am debug !');
ns.info('I am info !');
ns.trace('I am trace !');
ns.warn('I am warn !');
const domAppender = (time, level, ns, message) => {
    const div = document.createElement('div');
    div.setAttribute('style', STYLES[level]);
    div.innerText = `${time} - ${ns || ''} ${message}`;
    document.body.appendChild(div);
};
console.info('domAppender');
setAppenders([domAppender]);
error('I am error !');
debug('I am debug !');
info('I am info !');
trace('I am trace !');
warn('I am warn !');
console.info('no appenders');
setAppenders([]);
error('I am error !');
debug('I am debug !');
info('I am info !');
trace('I am trace !');
warn('I am warn !');
warn({ a: 1, b: 'str' }, 'str msg');
console.info('level info');
setLevel('info');
error('I am error !');
debug('I am debug !');
info('I am info !');
trace('I am trace !');
warn('I am warn !');
console.info('no level');
setLevel(void 0);
error('I am error !');
debug('I am debug !');
info('I am info !');
trace('I am trace !');
warn('I am warn !');
error(new Error('Error'), '!');
error('loooooonggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg');
error({ a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' }, { a: 1, b: 2, c: 'c' });
